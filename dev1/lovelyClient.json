Client {
    connection:
     Connection {
       stream:
        Socket {
          connecting: false,
          _hadError: false,
          _handle: [TCP],
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          readable: true,
          _events: [Object],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          writable: true,
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          [Symbol(asyncId)]: 131,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0 },
       _options: { objectMode: true },
       _readableState:
        ReadableState {
          highWaterMark: 16384,
          buffer: [],
          length: 0,
          pipes: null,
          pipesCount: 0,
          flowing: false,
          ended: false,
          endEmitted: false,
          reading: true,
          calledRead: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          objectMode: true,
          defaultEncoding: 'utf8',
          ranOut: false,
          awaitDrain: 0,
          readingMore: false,
          decoder: null,
          encoding: null },
       readable: true,
       _events:
        [Object: null prototype] {
          end: [Function],
          finish: [Function],
          data: [Function: emitPacket],
          readable: [Function],
          error: [Function: nop] },
       _eventsCount: 5,
       _maxListeners: undefined,
       _writableState:
        WritableState {
          highWaterMark: 16384,
          objectMode: true,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 1,
          writing: true,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function],
          writecb: [Function: cb],
          writelen: 1,
          buffer: [],
          errorEmitted: false },
       writable: true,
       allowHalfOpen: true,
       _writable:
        DestroyableTransform {
          _readableState: [ReadableState],
          readable: true,
          _events: [Object],
          _eventsCount: 5,
          _maxListeners: undefined,
          _writableState: [WritableState],
          writable: true,
          allowHalfOpen: true,
          _transformState: [TransformState],
          _destroyed: false,
          _transform: [Function: process] },
       _callWrite: [Function: callWrite3Args],
       _readable:
        DestroyableTransform {
          _readableState: [ReadableState],
          readable: true,
          _events: [Object],
          _eventsCount: 7,
          _maxListeners: undefined,
          _writableState: [WritableState],
          writable: true,
          allowHalfOpen: true,
          _transformState: [TransformState],
          _destroyed: false,
          _transform: [Function: process] },
       _lastReadCallback: null,
       pipe: [Function],
       addListener: [Function: addListener],
       on: [Function: addListener],
       pause: [Function],
       resume: [Function] },
    server:
     EventEmitter {
       _events:
        [Object: null prototype] {
          clientConnected: [Array],
          ready: [Array],
          subscribed: [Function],
          unsubscribed: [Function],
          clientDisconnected: [Array],
          published: [Function],
          clientDisconnecting: [Function] },
       _eventsCount: 7,
       _maxListeners: undefined,
       opts:
        { port: 1883,
          host: null,
          maxConnections: 10000000,
          backend: [Object],
          stats: false,
          publishNewClient: true,
          publishClientDisconnect: true,
          publishSubscriptions: true,
          maxInflightMessages: 1024,
          onQoS2publish: 'noack',
          logger: [Object] },
       modernOpts:
        { host: null,
          backend: [Object],
          stats: false,
          publishNewClient: true,
          publishClientDisconnect: true,
          publishSubscriptions: true,
          maxInflightMessages: 1024,
          onQoS2publish: 'noack',
          logger: [Object],
          interfaces: [Array] },
       _dedupId: 0,
       clients:
        { mqttjs_32f94493: [Client],
          'ESP32_3c:71:bf:4c:9d:d8': [Circular] },
       closed: false,
       logger:
        EventEmitter {
          stream: [WriteStream],
          serializers: [Object],
          stringify: [Function],
          end: ',"v":1}\n',
          name: 'mosca',
          timestamp: true,
          slowtime: false,
          chindings: '',
          cache: null,
          formatOpts: [Object],
          _levelVal: 40,
          fatal: [Function: LOG],
          error: [Function: LOG],
          warn: [Function: LOG],
          info: [Function: noop],
          debug: [Function: noop],
          trace: [Function: noop],
          _baseLog: '{"pid":2399,"hostname":"raspberrypi","name":"mosca",',
          time: [Function: getTime] },
       onQoS2publish: 'noack',
       id: 'RkZibnE',
       servers: [ [Server] ],
       ascoltatore:
        EventEmitter {
          _events: [Object],
          _eventsCount: 4,
          _maxListeners: 0,
          _separator: '/',
          _wildcardOne: '+',
          _wildcardSome: '#',
          _nativeSettings: {},
          publish: [Function: newPublish],
          pub: [Function: newPublish],
          _ready: true,
          _closed: false,
          _matcher: [Qlobber] },
       persistence: null,
       authenticate: [Function: authenticate] },
    logger:
     EventEmitter {
       stream:
        WriteStream {
          connecting: false,
          _hadError: false,
          _handle: [TTY],
          _parent: null,
          _host: null,
          _readableState: [ReadableState],
          readable: false,
          _events: [Object],
          _eventsCount: 2,
          _maxListeners: undefined,
          _writableState: [WritableState],
          writable: true,
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          columns: 40,
          rows: 10,
          _type: 'tty',
          fd: 1,
          _isStdio: true,
          destroySoon: [Function: destroy],
          _destroy: [Function: dummyDestroy],
          [Symbol(asyncId)]: 2,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0 },
       serializers:
        { client: [Function: clientSerializer],
          packet: [Function: packetSerializer],
          req: [Function: asReqValue],
          res: [Function: asResValue] },
       stringify: { [Function: stringify] default: [Circular] },
       end: ',"v":1}\n',
       name: 'mosca',
       timestamp: true,
       slowtime: false,
       chindings: ',"client":"ESP32_3c:71:bf:4c:9d:d8"',
       cache: null,
       formatOpts: { lowres: true },
       _levelVal: 40,
       fatal: [Function: LOG],
       error: [Function: LOG],
       warn: [Function: LOG],
       info: [Function: noop],
       debug: [Function: noop],
       trace: [Function: noop],
       _baseLog: '{"pid":2399,"hostname":"raspberrypi","name":"mosca",',
       time: [Function: getTime] },
    subscriptions: {},
    nextId: 1,
    inflight: {},
    inflightCounter: 0,
    _lastDedupId: -1,
    _closed: false,
    _closing: false,
    forward: [Function],
    id: 'ESP32_3c:71:bf:4c:9d:d8',
    keepalive: 0,
    will: undefined,
    clean: true }